需求分析:
		根据分类信息查询对应的所有的规格参数,并展示到前台
		
 1: 前台功能解析:
	1.1:分析昨天分类和品牌的div模块,其中唯一不同的就是`品牌`,所以可以使用相同的数据格式进行循环
	技术点:	v-for="(f,index) in filters" 
			v-show="f.key!='品牌'"
			v-else
			v-show="index<5 || show"  ## ->这里是展示页面收缩功能,同时需要vue->data中定义show:fales
	1.2:这样就需要获取的参数构造出相同的数据结构.
	技术点: 后台构造数据结构
	1.3:还需要满足条件搜索
	技术点:	@click="paramSpec(f,opt)" ## ->f==当前对象,opt==被选择对象
			新知识:Object.assign(searchTemp,this.search);
			assign:浅拷贝,vue中不能动态得到值,通过浅拷贝过度,同时需要在created钩子函数中定义:search.filter = search.filter || {};
			在vue->data中search对象内,新增filter条件对象,对象是以map格式传递,所以在点击时间中要构造对象格式
			

			
			
 2: 后台功能解析:	
	1.1:准备工作:改造SearchRequest实体类新增filter字段(条件查询map格式),
				改在SearchResult实体类新增paramList字段(返回规格参数List<Map<String,Object>)
			
	1.2:查询规格参数实现:
		1.2.1:非空判断 判断分类id不为空
			1.2.1.1:根据三级分类id查询规格参数
			1.2.1.2:要分组的属性值,构造条件
			1.2.1.3:转换map,获取桶内属性
			1.2.1.4:遍历聚合结果,把品牌和分类的聚合名称排除掉
			1.2.1.5:转换数据类型,封装到map对象,对应属性没有id,所以只填写属性,加入到获取参数的paramList中
	1.3:过滤filter查询条件
		1.3.1:这里不能用withQuery,已经不能满足我们的查询要求,使用boolQuery().must
		1.3.2:遍历key,根据需求构造不同的条件.如:field="cid3" or "brandId"
		
		
		
 3: 避坑指南:
	3.1:前台无法封装对象:
			原因:common.js 250行,vue定义了对象的封装allowDots: true
	3.2: v-if() 和 v-if()...v-else():
			原因:v-if()是单独判断
				if..else是整体判断,所以v-for只用在判断条件下使用一次
	3.3:构造数据结构自定义key:
			原因:前台div模块中循环已经定义了获取值得格式{{opt.name}},所以后台在定义key值得时候,要根据前台所需求的数据结构来实现
			
		
	
		

	